// console.log('module 02.1');

// {
//   a = 10;
//   console.log('a:', a);

//   a = 15;
//   console.log('a:', a);
// }

// console.log('a:', a);

// ===== example ======
// name.length === 4
// Input = ["Ryan", "Kieran", "Jason", "Yous"]
// Output = ["Ryan", "Yous"]
//               4        6         5        4
// const users = ['Ryan', 'Kieran', 'Jason', 'Yous'];
// const output = [];

// for (const name of users) {
//   if (name.length === 4) {
//     output.push(name);
//   }
// }

// console.log(output);

// ===== example ======
// const numbers = [12, 3232, 6666, 3, 98789];
// const output = [];

// for (const number of numbers) {
//   if (String(number).length === 4) {
//     output.push(number);
//   }
// }

// console.log(output);

// ===== example =====
// const numbers = [];

// numbers.push(1);
// console.log(numbers); // [1]

// numbers.push(2);
// console.log(numbers); // [1, 2]

// numbers.push(3);
// console.log(numbers); // [1, 2, 3]

// const num2 = numbers;
// console.log(num2); // [1, 2, 3]

// numbers.push(4);
// console.log(numbers); // [1, 2, 3, 4]

// numbers.push(5);
// console.log(numbers); // [1, 2, 3, 4, 5]

// console.log(num2); // [1, 2, 3, 4, 5]

// numbers = [];
// console.log(numbers); // []

// ============================================
// Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º
// –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.

// const genres = ['Jazz', 'Blues']; // –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.

// genres.push('Rock & Roll'); // –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// console.log(genres[0]); // –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// console.log(genres[genres.length - 1]); // –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// console.log(genres.shift()); // –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// genres.unshift('Country', 'Reggae'); // –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
// console.log(genres);

// ============================================
// Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// function getSquare(str) {
//   const [x, y] = str.split(' ');
//   //   const x = arr[0];
//   //   const y = arr[1];

//   return Number(x) * Number(y);
// }

// console.log(getSquare('8 11'));
// console.log(getSquare('10 11'));

// ============================================
// Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ
// –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i < fruits.length; i += 1) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }

// ============================================
// Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';

// const namesArr = names.split(',');
// const phonesArr = phones.split(',');

// console.log(namesArr);
// console.log(phonesArr);

// for (let i = 0; i < namesArr.length; i += 1) {
//   const nameWithEnding = `${namesArr[i]}:`;
//   console.log(`${nameWithEnding.padEnd(10, ' ')} ${phonesArr[i]}`);
// }

// ============================================
// Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ. –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.

// const string = 'Welcome to the future';
// const strArr = string.split(' ');

// strArr.shift();
// strArr.pop();

// console.log(`"${strArr.join(' ')}"`);

// ============================================
// Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
// "abc def" => "fed cba"

// const string = 'Welcome to the future';
// const letters = string.split('');
// const reversedStr = [];

// for (let i = letters.length - 1; i >= 0; i -= 1) {
//   reversedStr.push(letters[i]);
// }

// console.log(reversedStr.join(''));
// console.log(string.split('').reverse().join(''));

// ============================================
// Example 7 - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];

// for (let x = 0; x < langs.length; x += 1) {
//   for (let y = x + 1; y < langs.length; y += 1) {
//     const lang1 = langs[x];
//     const lang2 = langs[y];

//     if (lang1[0] > lang2[0]) {
//       langs[y] = lang1;
//       langs[x] = lang2;
//     }
//   }
// }

// console.log(langs);

// ===== swap =====
// let a = 1;
// let b = 2;

// [b, a] = [a, b];

// console.log('a:', a);
// console.log('b:', b);

// ============================================
// Example 8 - –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

// const numbers = [2, 17, 94, 1, 23, 37];

// let min = numbers[0];
// let max = numbers[0];

// for (const number of numbers) {
//   if (number < min) {
//     min = number;
//   }

//   if (number > max) {
//     max = number;
//   }
// }

// console.log(min); // 1
// console.log(max); // 94

// ====== spread ======
// const numbers = [2, 17, 94, 1, 23, 37];

// console.log(...numbers);
// console.log(Math.min(...numbers));
// console.log(Math.max(...numbers));

// const arr1 = [1, 2, 3];
// const arr2 = [...arr1];

// arr1.push(4);
// console.log(arr1);
// console.log(arr2);

// ===== rest ======
// function sum(a, b, ...rest) {
//   console.log(rest);

//   return a + b;
// }

// console.log(sum(1, 1, 3, 4, 5, 3, 3, 2, 4));

// ===== arguments =====
// function sum(...rest) {
//   console.log(arguments);
//   //   return a + b;
// }

// console.log(sum(1, 1, 3, 4, 5, 3, 3, 2, 4));

// ========= example =========
// a –ø–æ—è—Å–Ω—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞, —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—É–º—É–≤–∞—Ç–∏ –≤ —Ñ—É–Ω–∫—Ü—ñ—ó —á–∏—Å–ª–æ.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥ —Ñ—É–Ω—Ü—ñ—è —á–∏—Å–ª–æ 7,
// –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—É–º—É–≤–∞—Ç–∏ 1+2+3+4+5+5+7 = —Å—É–º–º–∞

function sumRange(num) {
  // 1 ... num
  let sum = 0;

  for (let i = 1; i <= num; i += 1) {
    sum += i;
  }

  return sum;
}

console.log(sumRange(2)); // 3
console.log(sumRange(3)); // 6
console.log(sumRange(7)); // 28
